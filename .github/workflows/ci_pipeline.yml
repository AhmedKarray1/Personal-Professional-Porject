name: CI/CD

on:
  push:
    branches:
      - '**'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.19.6"

      - name: Install dependencies
        run: flutter pub get

      - name: Run Linter
        run: flutter analyze

      - name: Run Tests
        run: flutter test

      - name: Install Ruby and Bundle Audit
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full
          sudo gem install bundler
          sudo gem install bundle-audit

      - name: Install OWASP Dependency-Check
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.3.2/dependency-check-7.3.2-release.zip
          unzip dependency-check-7.3.2-release.zip -d dependency-check
          sudo mv dependency-check/dependency-check /usr/local/dependency-check
          sudo chmod +x /usr/local/dependency-check/bin/dependency-check.sh
          echo "/usr/local/dependency-check/bin" >> $GITHUB_PATH

      - name: Verify OWASP Dependency-Check Installation
        run: /usr/local/dependency-check/bin/dependency-check.sh --version

      - name: Run OWASP Dependency-Check on Android Dependencies
        run: |
          mkdir -p dependency-check-report
          /usr/local/dependency-check/bin/dependency-check.sh --project "My Project" --scan ./android --format "ALL" --out dependency-check-report

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: Send success notification to Slack
        if: success()
        run: |
          REPORT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Lint, test, and OWASP Dependency-Check successful!",
            "attachments": [
              {
                "color": "good",
                "fields": [
                  {"title": "Repository", "value": "${{ github.repository }}", "short": true},
                  {"title": "Branch", "value": "${{ github.ref }}", "short": true},
                  {"title": "Commit Message", "value": "${{ github.event.head_commit.message }}", "short": false},
                  {"title": "Commit Author", "value": "${{ github.event.head_commit.author.name }}", "short": true},
                  {"title": "Job Status", "value": "success", "short": true},
                  {"title": "Workflow", "value": "${{ github.workflow }}", "short": true},
                  {"title": "Job", "value": "${{ github.job }}", "short": true},
                  {"title": "Runner OS", "value": "${{ runner.os }}", "short": true},
                  {"title": "Run ID", "value": "${{ github.run_id }}", "short": true},
                  {"title": "Report", "value": "[Dependency-Check Report]($REPORT_URL/dependency-check-report/dependency-check-report.html)", "short": false}
                ]
              }
            ]
          }' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send failure notification to Slack
        if: failure()
        run: |
          REPORT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Lint, test, or OWASP Dependency-Check failed!",
            "attachments": [
              {
                "color": "danger",
                "fields": [
                  {"title": "Repository", "value": "${{ github.repository }}", "short": true},
                  {"title": "Branch", "value": "${{ github.ref }}", "short": true},
                  {"title": "Commit Message", "value": "${{ github.event.head_commit.message }}", "short": false},
                  {"title": "Commit Author", "value": "${{ github.event.head_commit.author.name }}", "short": true},
                  {"title": "Job Status", "value": "failure", "short": true},
                  {"title": "Workflow", "value": "${{ github.workflow }}", "short": true},
                  {"title": "Job", "value": "${{ github.job }}", "short": true},
                  {"title": "Runner OS", "value": "${{ runner.os }}", "short": true},
                  {"title": "Run ID", "value": "${{ github.run_id }}", "short": true},
                  {"title": "Report", "value": "[Dependency-Check Report]($REPORT_URL/dependency-check-report/dependency-check-report.html)", "short": false}
                ]
              }
            ]
          }' ${{ secrets.SLACK_WEBHOOK_URL }}
