name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  CD_PIPELINE:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.19.6"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"

      - name: Setup Fastlane
        run: |
          cd android
          bundle install
          cd ../..

      - name: Install dependencies
        run: flutter pub get

      - name: Bump version
        id: bump_version
        run: |
          # Extract the current version
          current_version=$(grep '^version:' pubspec.yaml | awk '{print $2}')
          # Split version into major, minor, patch, and build number
          IFS='+-.' read -r major minor patch build <<< "${current_version}"
          # Increment the build number
          build=$((build + 1))
          # Form the new version string
          new_version="${major}.${minor}.${patch}+${build}"
          # Replace the version in pubspec.yaml
          sed -i "s/^version: .*/version: ${new_version}/" pubspec.yaml
          # Commit the changes
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add pubspec.yaml
          git commit -m "Bump version to ${new_version}"
          echo "new_version=${new_version}" >> $GITHUB_ENV

      - name: Run Linter
        run: flutter analyze

      - name: Run Tests
        run: flutter test

      - name: Build
        run: flutter build apk

      - name: Deploy with Fastlane
        run: |
          cd android
          fastlane deploy_to_firebase
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

      - name: Send success notification to Slack
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Deployment successful!",
            "attachments": [
              {
                "color": "good",
                "fields": [
                  {"title": "Repository", "value": "${{ github.repository }}", "short": true},
                  {"title": "Branch", "value": "${{ github.ref }}", "short": true},
                  {"title": "Commit Message", "value": "${{ github.event.head_commit.message }}", "short": false},
                  {"title": "Commit Author", "value": "${{ github.event.head_commit.author.name }}", "short": true},
                  {"title": "Job Status", "value": "${{ job.status }}", "short": true},
                  {"title": "Workflow", "value": "${{ github.workflow }}", "short": true},
                  {"title": "Job", "value": "${{ github.job }}", "short": true},
                  {"title": "Runner OS", "value": "${{ runner.os }}", "short": true},
                  {"title": "Run ID", "value": "${{ github.run_id }}", "short": true}
                ]
              }
            ]
          }' $SLACK_WEBHOOK_URL

      - name: Send failure notification to Slack
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Deployment failed!",
            "attachments": [
              {
                "color": "danger",
                "fields": [
                  {"title": "Repository", "value": "${{ github.repository }}", "short": true},
                  {"title": "Branch", "value": "${{ github.ref }}", "short": true},
                  {"title": "Commit Message", "value": "${{ github.event.head_commit.message }}", "short": false},
                  {"title": "Commit Author", "value": "${{ github.event.head_commit.author.name }}", "short": true},
                  {"title": "Job Status", "value": "${{ job.status }}", "short": true},
                  {"title": "Workflow", "value": "${{ github.workflow }}", "short": true},
                  {"title": "Job", "value": "${{ github.job }}", "short": true},
                  {"title": "Runner OS", "value": "${{ runner.os }}", "short": true},
                  {"title": "Run ID", "value": "${{ github.run_id }}", "short": true}
                ]
              }
            ]
          }' $SLACK_WEBHOOK_URL
